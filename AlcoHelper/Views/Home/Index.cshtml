@model List<AlcoHelper.Models.Alcohol>

@{
    ViewData["Title"] = "Home Page";
    var selectedTagIds = ViewBag.SelectedTagIds as List<int> ?? new List<int>();
    var tags = ViewBag.Tags as List<AlcoHelper.Models.Tag> ?? new List<AlcoHelper.Models.Tag>();
    var sortOrder = ViewBag.SortOrder as string ?? "name_asc";
    var userFavorites = ViewBag.UserFavorites as List<int> ?? new List<int>();
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet">

<style>
    body {
        font-family: 'Inter', sans-serif;
        background: linear-gradient(rgba(255,255,255,0.88), rgba(255,255,255,0.88)), url('/uploads/bg-alcohol.jpg');
        background-size: cover;
        background-attachment: fixed;
        background-position: center;
        background-repeat: no-repeat;
        background-blend-mode: lighten;
    }

    h1.display-4 {
        font-weight: bold;
        color: #2d2f41;
    }

    .card {
        border: none;
        border-radius: 18px;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        background-color: rgba(255, 255, 255, 0.95);
    }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 12px 25px rgba(0, 0, 0, 0.15);
        }

    .badge-tag {
        display: inline-block;
        margin: 2px 5px 2px 0;
        padding: 6px 12px;
        font-size: 0.8rem;
        font-weight: 500;
        background: linear-gradient(135deg, #84fab0 0%, #8fd3f4 100%);
        color: #1a1a1a;
        border-radius: 999px;
        transition: 0.2s;
    }

        .badge-tag:hover {
            filter: brightness(1.1);
        }

    .tag-checkbox {
        display: flex;
        align-items: center;
        margin: 5px 12px 5px 0;
        padding: 5px 10px;
        background-color: rgba(255,255,255,0.8);
        border-radius: 20px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

        .tag-checkbox:hover {
            background-color: rgba(255,255,255,1);
        }

        .tag-checkbox input[type="checkbox"] {
            margin-right: 6px;
        }

    .alert-secondary {
        background-color: #f8f9fa;
        border-left: 5px solid #28a745;
        padding: 15px;
        margin-top: 20px;
    }

    .d-flex.align-items-center.mt-2.gap-3 {
    justify-content: center !important;
    }

</style>

<div class="text-center">
    <h1 class="display-4">Witaj</h1>
    <h2>Dostępne alkohole</h2>

    <div class="d-flex flex-wrap justify-content-between align-items-center mb-4" style="max-width: 900px; margin: 0 auto;">
        <form method="get" action="@Url.Action("Index", "Home")" class="form-inline mb-2">
            <input type="text" class="form-control mr-2" name="searchTerm" placeholder="Wyszukaj po nazwie" value="@ViewBag.SearchTerm" style="width: 250px;" />
            @Html.DropDownList("sortOrder", new List<SelectListItem>
            {
                new SelectListItem { Value = "name_asc", Text = "Nazwa rosnąco", Selected = sortOrder == "name_asc" },
                        new SelectListItem { Value = "name_desc", Text = "Nazwa malejąco", Selected = sortOrder == "name_desc" },
                        new SelectListItem { Value = "alcohol_asc", Text = "%vol. rosnąco", Selected = sortOrder == "alcohol_asc" },
                        new SelectListItem { Value = "alcohol_desc", Text = "%vol. malejąco", Selected = sortOrder == "alcohol_desc" }
                        }, new { @class = "form-control form-control-sm mr-2", style = "width: 160px;" })
            <button type="submit" class="btn btn-primary">Szukaj</button>
        </form>
    </div>

    <div class="border rounded p-3 mb-4 bg-light" style="max-width: 900px; margin: 0 auto;">
        <strong>Filtruj po tagach:</strong>
        <form method="get" action="@Url.Action("Index", "Home")" class="position-relative">
            <input type="hidden" name="searchTerm" value="@ViewBag.SearchTerm" />
            <input type="hidden" name="sortOrder" value="@sortOrder" />

            <div class="d-flex align-items-center mt-2 gap-3">
                <div class="dropdown">
                    <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" id="tagsDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        <span id="dropdownLabel">Wybierz tagi</span>
                    </button>
                    <ul class="dropdown-menu p-3" aria-labelledby="tagsDropdown" style="max-height: 200px; overflow-y: auto; min-width: 200px;">
                        @foreach (var tag in tags)
                        {
                            <li>
                                <label class="form-check-label">
                                    <input type="checkbox" class="form-check-input me-1" name="selectedTagIds" value="@tag.Id" @(selectedTagIds.Contains(tag.Id) ? "checked" : "") />
                                    @tag.Name
                                </label>
                            </li>
                        }
                    </ul>
                </div>

                <button type="button" id="clearFiltersBtn" class="btn btn-outline-danger btn-sm">Wyczyść filtry</button>
            </div>

            <div class="mt-2" id="selectedTagsDisplay" style="min-height: 1.5em; font-weight: 600; color: #333;">
                <!-- Tu będą wypisane wybrane tagi -->
            </div>

            <button type="submit" class="btn btn-secondary btn-sm mt-2">Filtruj</button>
        </form>
    </div>


    @if (Model == null || !Model.Any())
    {
        <div class="alert alert-info">Brak zatwierdzonych alkoholi w bazie danych.</div>
    }
    else
    {
        <div class="row">
            @foreach (var alcohol in Model)
            {
                var isFavorite = userFavorites.Contains(alcohol.Id);
                <div class="col-md-4 mb-4">
                    <div class="card h-100 d-flex flex-column position-relative">
                        <button class="btn btn-link p-0 toggle-favorite position-absolute"
                                style="top: 10px; right: 12px; z-index: 5;"
                                data-id="@alcohol.Id"
                                data-isfavorite="@isFavorite.ToString().ToLower()"
                                title="@(isFavorite ? "Usuń z ulubionych" : "Dodaj do ulubionych")">
                            <i class="@(isFavorite ? "fas" : "far") fa-heart fa-lg @(isFavorite ? "text-danger" : "text-secondary")"></i>
                        </button>

                        <img src="@(!string.IsNullOrEmpty(alcohol.ImageUrl) ? alcohol.ImageUrl : "https://via.placeholder.com/300x200?text=Brak+zdjęcia")"
                             class="card-img-top"
                             style="height: 200px; object-fit: contain; width: 100%; background-color: #fff;" />

                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@alcohol.Name</h5>
                            <p class="card-text"><strong>Typ:</strong> @alcohol.Type</p>
                            <p class="card-text"><strong>Kraj:</strong> @alcohol.Country</p>
                            <p class="card-text"><strong>Alkohol:</strong> @alcohol.AlcoholPercentage%</p>
                            <p class="card-text"><strong>Opis:</strong> @alcohol.Description</p>

                            <div class="mt-auto">
                                @if (alcohol.AlcoholTags != null && alcohol.AlcoholTags.Any())
                                {
                                    <div class="mb-2">
                                        @foreach (var tag in alcohol.AlcoholTags)
                                        {
                                            <span class="badge-tag">@tag.Tag?.Name</span>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <p class="mb-2"><strong>Tagi:</strong> Brak tagów</p>
                                }

                                <a href="@Url.Action("Details", "Alcohol", new { id = alcohol.Id })" class="btn btn-info btn-sm">
                                    <i class="fas fa-info-circle"></i> Szczegóły
                                </a>
                                <a href="@Url.Action("Create", "Review", new { alcoholId = alcohol.Id })" class="btn btn-primary btn-sm ml-1">Recenzja</a>
                                @if (Context.Session.GetString("Role") == "Admin")
                                {
                                    <a href="@Url.Action("Edit", "Alcohol", new { id = alcohol.Id })" class="btn btn-warning btn-sm ml-1">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a href="#" onclick="if(confirm('Na pewno chcesz wywalić ten alkohol?')) { document.getElementById('deleteForm-@alcohol.Id').submit(); }" 
                                        class="btn btn-danger btn-sm ml-1">
                                            <i class="fas fa-trash-alt"></i>
                                        </a>
                                    <form id="deleteForm-@alcohol.Id" method="post" asp-action="Delete" asp-controller="Alcohol" asp-route-id="@alcohol.Id" style="display:none;">
                                        @Html.AntiForgeryToken()
                                    </form>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<hr class="mt-5" />
<h3 class="mb-3 text-success font-weight-bold">Nie wiesz co wybrać? Zapytaj naszego sommeliera!</h3>

<p class="mb-4">
    Opowiedz mu o swoich preferencjach, budżecie i okazji – doradzi jak zawodowiec.
</p>
@if (Context.Session.GetString("UserName") != null)
    {
        <a href="@Url.Action("Index", "Chat")" class="btn btn-success btn-lg">
            Przejdź do chatu z sommelierem
        </a>
    }
else
{
    <a href="@Url.Action("Login", "Account")" class="btn btn-primary btn-lg">
        Zaloguj się, aby korzystać z chatu
    </a>
}



@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.querySelectorAll('.toggle-favorite').forEach(button => {
                button.addEventListener('click', async function (e) {
                    e.preventDefault();

                    const alcoholId = this.dataset.id;
                    const isFavorite = this.dataset.isfavorite === 'true';
                    const url = isFavorite ? '/Alcohol/RemoveFromFavorites' : '/Alcohol/AddToFavorites';

                    const formData = new FormData();
                    formData.append('alcoholId', alcoholId);

                    const response = await fetch(url, {
                        method: 'POST',
                        body: formData
                    });

                            if (response.ok) {
            const icon = this.querySelector('i');

            if (isFavorite) {
                // Usunięto z ulubionych – zmień ikonę
                icon.classList.remove('fas', 'text-danger');
                icon.classList.add('far', 'text-secondary');
                this.dataset.isfavorite = 'false';
            } else {
                // Dodano do ulubionych – zmień ikonę
                icon.classList.remove('far', 'text-secondary');
                icon.classList.add('fas', 'text-danger');
                this.dataset.isfavorite = 'true';
            }
        }
         else {
                        alert("Wystąpił błąd podczas zapisu.");
                    }
                });
            });
        });
        const checkboxes = document.querySelectorAll('input[name="selectedTagIds"]');
        const dropdownLabel = document.getElementById('dropdownLabel');
        const selectedTagsDisplay = document.getElementById('selectedTagsDisplay');
        const clearFiltersBtn = document.getElementById('clearFiltersBtn');

        function updateSelectedTags() {
            const selected = [];
            checkboxes.forEach(cb => {
                if (cb.checked) selected.push(cb.nextSibling.textContent.trim());
            });

            if (selected.length === 0) {
                dropdownLabel.textContent = 'Wybierz tagi';
                selectedTagsDisplay.textContent = 'Brak wybranych tagów';
            } else {
                dropdownLabel.textContent = `Wybrano (${selected.length})`;
                selectedTagsDisplay.textContent = selected.join(', ');
            }
        }

        checkboxes.forEach(cb => {
            cb.addEventListener('change', updateSelectedTags);
        });

        clearFiltersBtn.addEventListener('click', () => {
            checkboxes.forEach(cb => cb.checked = false);
            updateSelectedTags();
        });

        // Init przy ładowaniu strony
        updateSelectedTags();
    </script>
}
